// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id       String         @id @db.Uuid @default(uuid())
  code     String
  name     String
  owner_id String @db.Uuid

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  owner Owner @relation(fields: [owner_id], references: [id])
  stores Store[]
  @@unique([name, owner_id])
  @@map("companies")
}

model Store {
  id          String         @id @db.Uuid @default(uuid())
  code        String
  name        String
  npwp        String
  open_date   DateTime          @db.Date
  address     String            @db.Text
  longitude   Decimal           @db.Decimal(65, 20)
  latitude    Decimal           @db.Decimal(65, 20)
  information String?            @db.Text
  is_active   Boolean           @default(true)
  is_flex_price Boolean @default(false)
  is_float_price Boolean @default(false)
  poin_config Int @default(0)

  company_id String @db.Uuid

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  company Company @relation(fields: [company_id], references: [id])

  @@unique([name, company_id])
  @@map("stores")
}

model Owner {
  id      String         @id @db.Uuid @default(uuid())
  name     String
  email    String
  password String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  companies Company[]
  employees Employee[]
  @@unique([email])
  @@map("owners")
}

model Employee {
  id      String         @id @db.Uuid @default(uuid())
  name     String
  email    String
  password String
  owner_id String @db.Uuid

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted_at DateTime?

  owner Owner @relation(fields: [owner_id], references: [id])

  @@unique([email])
  @@map("employees")
}